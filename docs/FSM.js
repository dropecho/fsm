// Generated by Haxe 4.0.5
(function($hx_exports, $global) {
  'use strict';
  var dropecho_fsm_FSM = $hx_exports.FSM = function(entity, startingState, globalState) {
    this.entity = entity;
    this.currentState = startingState;
    this.globalState = globalState;
  };
  dropecho_fsm_FSM.prototype = {
    run: function() {
      if(this.globalState != null) {
        this.currentState = this.checkBlip();
      }
      if(this.currentState != null) {
        this.currentState = this.currentState.execute(this.entity);
      }
    },
    checkBlip: function() {
      var blip = this.globalState.execute(this.entity);
      if(blip == null && this.previousState != null) {
        return this.previousState;
      }
      if(blip != null && blip != this.globalState) {
        this.previousState = this.currentState;
        return blip;
      }
      return this.currentState;
    }
  };
  var dropecho_fsm_State = $hx_exports.State = function(action, transitions) {
    this.action = action;
    this.transitions = transitions != null ? transitions : [];
  };
  dropecho_fsm_State.prototype = {
    execute: function(entity) {
      this.action(entity);
      var _g = 0;
      var _g1 = this.transitions;
      while(_g < _g1.length) {
        var transition = _g1[_g];
        ++_g;
        var switchState = transition(entity);
        if(switchState != null) {
          return switchState;
        }
      }
      return this;
    }
  };
})(typeof exports !== 'undefined' ? exports : typeof window !== 'undefined' ? window : typeof self !== 'undefined' ? self : this, {});
